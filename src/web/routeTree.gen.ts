/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodosExampleImport } from './routes/todos-example'
import { Route as ChatImport } from './routes/_chat'
import { Route as ChatIndexImport } from './routes/_chat.index'
import { Route as AuthIdImport } from './routes/auth.$id'
import { Route as ChatChatIdImport } from './routes/_chat.$chatId'
import { Route as ApiAuthCallbackGoogleImport } from './routes/api.auth.callback.google'

// Create/Update Routes

const TodosExampleRoute = TodosExampleImport.update({
  id: '/todos-example',
  path: '/todos-example',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/_chat',
  getParentRoute: () => rootRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)

const AuthIdRoute = AuthIdImport.update({
  id: '/auth/$id',
  path: '/auth/$id',
  getParentRoute: () => rootRoute,
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatRoute,
} as any)

const ApiAuthCallbackGoogleRoute = ApiAuthCallbackGoogleImport.update({
  id: '/api/auth/callback/google',
  path: '/api/auth/callback/google',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/todos-example': {
      id: '/todos-example'
      path: '/todos-example'
      fullPath: '/todos-example'
      preLoaderRoute: typeof TodosExampleImport
      parentRoute: typeof rootRoute
    }
    '/_chat/$chatId': {
      id: '/_chat/$chatId'
      path: '/$chatId'
      fullPath: '/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof ChatImport
    }
    '/auth/$id': {
      id: '/auth/$id'
      path: '/auth/$id'
      fullPath: '/auth/$id'
      preLoaderRoute: typeof AuthIdImport
      parentRoute: typeof rootRoute
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof ChatImport
    }
    '/api/auth/callback/google': {
      id: '/api/auth/callback/google'
      path: '/api/auth/callback/google'
      fullPath: '/api/auth/callback/google'
      preLoaderRoute: typeof ApiAuthCallbackGoogleImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatChatIdRoute: typeof ChatChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatChatIdRoute: ChatChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof ChatRouteWithChildren
  '/todos-example': typeof TodosExampleRoute
  '/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/': typeof ChatIndexRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRoutesByTo {
  '/todos-example': typeof TodosExampleRoute
  '/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/': typeof ChatIndexRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_chat': typeof ChatRouteWithChildren
  '/todos-example': typeof TodosExampleRoute
  '/_chat/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/_chat/': typeof ChatIndexRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/todos-example'
    | '/$chatId'
    | '/auth/$id'
    | '/'
    | '/api/auth/callback/google'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/todos-example'
    | '/$chatId'
    | '/auth/$id'
    | '/'
    | '/api/auth/callback/google'
  id:
    | '__root__'
    | '/_chat'
    | '/todos-example'
    | '/_chat/$chatId'
    | '/auth/$id'
    | '/_chat/'
    | '/api/auth/callback/google'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ChatRoute: typeof ChatRouteWithChildren
  TodosExampleRoute: typeof TodosExampleRoute
  AuthIdRoute: typeof AuthIdRoute
  ApiAuthCallbackGoogleRoute: typeof ApiAuthCallbackGoogleRoute
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRouteWithChildren,
  TodosExampleRoute: TodosExampleRoute,
  AuthIdRoute: AuthIdRoute,
  ApiAuthCallbackGoogleRoute: ApiAuthCallbackGoogleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_chat",
        "/todos-example",
        "/auth/$id",
        "/api/auth/callback/google"
      ]
    },
    "/_chat": {
      "filePath": "_chat.tsx",
      "children": [
        "/_chat/$chatId",
        "/_chat/"
      ]
    },
    "/todos-example": {
      "filePath": "todos-example.tsx"
    },
    "/_chat/$chatId": {
      "filePath": "_chat.$chatId.tsx",
      "parent": "/_chat"
    },
    "/auth/$id": {
      "filePath": "auth.$id.tsx"
    },
    "/_chat/": {
      "filePath": "_chat.index.tsx",
      "parent": "/_chat"
    },
    "/api/auth/callback/google": {
      "filePath": "api.auth.callback.google.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
