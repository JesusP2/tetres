/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as ChatImport } from './routes/_chat'
import { Route as ChatIndexImport } from './routes/_chat.index'
import { Route as AuthIdImport } from './routes/auth.$id'
import { Route as ChatChatIdImport } from './routes/_chat.$chatId'
import { Route as ChatSharedShareTokenImport } from './routes/_chat.shared.$shareToken'
import { Route as ApiAuthCallbackGoogleImport } from './routes/api.auth.callback.google'

// Create Virtual Routes

const SettingsIndexLazyImport = createFileRoute('/settings/')()
const SettingsApiKeysLazyImport = createFileRoute('/settings/api-keys')()
const SettingsAccountLazyImport = createFileRoute('/settings/account')()

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/_chat',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexLazyRoute = SettingsIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRoute,
} as any).lazy(() =>
  import('./routes/settings/index.lazy').then((d) => d.Route),
)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)

const SettingsApiKeysLazyRoute = SettingsApiKeysLazyImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => SettingsRoute,
} as any).lazy(() =>
  import('./routes/settings/api-keys.lazy').then((d) => d.Route),
)

const SettingsAccountLazyRoute = SettingsAccountLazyImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => SettingsRoute,
} as any).lazy(() =>
  import('./routes/settings/account.lazy').then((d) => d.Route),
)

const AuthIdRoute = AuthIdImport.update({
  id: '/auth/$id',
  path: '/auth/$id',
  getParentRoute: () => rootRoute,
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => ChatRoute,
} as any)

const ChatSharedShareTokenRoute = ChatSharedShareTokenImport.update({
  id: '/shared/$shareToken',
  path: '/shared/$shareToken',
  getParentRoute: () => ChatRoute,
} as any)

const ApiAuthCallbackGoogleRoute = ApiAuthCallbackGoogleImport.update({
  id: '/api/auth/callback/google',
  path: '/api/auth/callback/google',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_chat': {
      id: '/_chat'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/_chat/$chatId': {
      id: '/_chat/$chatId'
      path: '/$chatId'
      fullPath: '/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof ChatImport
    }
    '/auth/$id': {
      id: '/auth/$id'
      path: '/auth/$id'
      fullPath: '/auth/$id'
      preLoaderRoute: typeof AuthIdImport
      parentRoute: typeof rootRoute
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountLazyImport
      parentRoute: typeof SettingsImport
    }
    '/settings/api-keys': {
      id: '/settings/api-keys'
      path: '/api-keys'
      fullPath: '/settings/api-keys'
      preLoaderRoute: typeof SettingsApiKeysLazyImport
      parentRoute: typeof SettingsImport
    }
    '/_chat/': {
      id: '/_chat/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof ChatImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexLazyImport
      parentRoute: typeof SettingsImport
    }
    '/_chat/shared/$shareToken': {
      id: '/_chat/shared/$shareToken'
      path: '/shared/$shareToken'
      fullPath: '/shared/$shareToken'
      preLoaderRoute: typeof ChatSharedShareTokenImport
      parentRoute: typeof ChatImport
    }
    '/api/auth/callback/google': {
      id: '/api/auth/callback/google'
      path: '/api/auth/callback/google'
      fullPath: '/api/auth/callback/google'
      preLoaderRoute: typeof ApiAuthCallbackGoogleImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatChatIdRoute: typeof ChatChatIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
  ChatSharedShareTokenRoute: typeof ChatSharedShareTokenRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatChatIdRoute: ChatChatIdRoute,
  ChatIndexRoute: ChatIndexRoute,
  ChatSharedShareTokenRoute: ChatSharedShareTokenRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

interface SettingsRouteChildren {
  SettingsAccountLazyRoute: typeof SettingsAccountLazyRoute
  SettingsApiKeysLazyRoute: typeof SettingsApiKeysLazyRoute
  SettingsIndexLazyRoute: typeof SettingsIndexLazyRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsAccountLazyRoute: SettingsAccountLazyRoute,
  SettingsApiKeysLazyRoute: SettingsApiKeysLazyRoute,
  SettingsIndexLazyRoute: SettingsIndexLazyRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ChatRouteWithChildren
  '/settings': typeof SettingsRouteWithChildren
  '/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/settings/account': typeof SettingsAccountLazyRoute
  '/settings/api-keys': typeof SettingsApiKeysLazyRoute
  '/': typeof ChatIndexRoute
  '/settings/': typeof SettingsIndexLazyRoute
  '/shared/$shareToken': typeof ChatSharedShareTokenRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRoutesByTo {
  '/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/settings/account': typeof SettingsAccountLazyRoute
  '/settings/api-keys': typeof SettingsApiKeysLazyRoute
  '/': typeof ChatIndexRoute
  '/settings': typeof SettingsIndexLazyRoute
  '/shared/$shareToken': typeof ChatSharedShareTokenRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_chat': typeof ChatRouteWithChildren
  '/settings': typeof SettingsRouteWithChildren
  '/_chat/$chatId': typeof ChatChatIdRoute
  '/auth/$id': typeof AuthIdRoute
  '/settings/account': typeof SettingsAccountLazyRoute
  '/settings/api-keys': typeof SettingsApiKeysLazyRoute
  '/_chat/': typeof ChatIndexRoute
  '/settings/': typeof SettingsIndexLazyRoute
  '/_chat/shared/$shareToken': typeof ChatSharedShareTokenRoute
  '/api/auth/callback/google': typeof ApiAuthCallbackGoogleRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/$chatId'
    | '/auth/$id'
    | '/settings/account'
    | '/settings/api-keys'
    | '/'
    | '/settings/'
    | '/shared/$shareToken'
    | '/api/auth/callback/google'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$chatId'
    | '/auth/$id'
    | '/settings/account'
    | '/settings/api-keys'
    | '/'
    | '/settings'
    | '/shared/$shareToken'
    | '/api/auth/callback/google'
  id:
    | '__root__'
    | '/_chat'
    | '/settings'
    | '/_chat/$chatId'
    | '/auth/$id'
    | '/settings/account'
    | '/settings/api-keys'
    | '/_chat/'
    | '/settings/'
    | '/_chat/shared/$shareToken'
    | '/api/auth/callback/google'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ChatRoute: typeof ChatRouteWithChildren
  SettingsRoute: typeof SettingsRouteWithChildren
  AuthIdRoute: typeof AuthIdRoute
  ApiAuthCallbackGoogleRoute: typeof ApiAuthCallbackGoogleRoute
}

const rootRouteChildren: RootRouteChildren = {
  ChatRoute: ChatRouteWithChildren,
  SettingsRoute: SettingsRouteWithChildren,
  AuthIdRoute: AuthIdRoute,
  ApiAuthCallbackGoogleRoute: ApiAuthCallbackGoogleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_chat",
        "/settings",
        "/auth/$id",
        "/api/auth/callback/google"
      ]
    },
    "/_chat": {
      "filePath": "_chat.tsx",
      "children": [
        "/_chat/$chatId",
        "/_chat/",
        "/_chat/shared/$shareToken"
      ]
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/account",
        "/settings/api-keys",
        "/settings/"
      ]
    },
    "/_chat/$chatId": {
      "filePath": "_chat.$chatId.tsx",
      "parent": "/_chat"
    },
    "/auth/$id": {
      "filePath": "auth.$id.tsx"
    },
    "/settings/account": {
      "filePath": "settings/account.lazy.tsx",
      "parent": "/settings"
    },
    "/settings/api-keys": {
      "filePath": "settings/api-keys.lazy.tsx",
      "parent": "/settings"
    },
    "/_chat/": {
      "filePath": "_chat.index.tsx",
      "parent": "/_chat"
    },
    "/settings/": {
      "filePath": "settings/index.lazy.tsx",
      "parent": "/settings"
    },
    "/_chat/shared/$shareToken": {
      "filePath": "_chat.shared.$shareToken.tsx",
      "parent": "/_chat"
    },
    "/api/auth/callback/google": {
      "filePath": "api.auth.callback.google.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
